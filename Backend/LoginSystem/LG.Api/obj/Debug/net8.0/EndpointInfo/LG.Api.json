{
  "openapi": "3.0.1",
  "info": {
    "title": "LG.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/Account": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/Update": {
      "put": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/user/{userId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role/assign": {
      "post": {
        "tags": [
          "Role"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRolesRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRolesRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRolesRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseFiltersRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseFiltersRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseFiltersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Select": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Generate/Token": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountRequestDto": {
        "required": [
          "firstName",
          "identityCard",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "identityCard": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(?!.*(\\d)\\1{3})[0-9]{10}$",
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "username": {
            "maxLength": 20,
            "minLength": 8,
            "pattern": "^(?!.*[\\W_])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,20}$",
            "type": "string"
          },
          "password": {
            "maxLength": 16,
            "minLength": 8,
            "pattern": "^(?!.*\\s)(?=.*[A-Z])(?=.*[\\W_]).{8,16}$",
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignRolesRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "auditUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BaseFiltersRequest": {
        "type": "object",
        "properties": {
          "numPage": {
            "type": "integer",
            "format": "int32"
          },
          "numRecordsPage": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "records": {
            "type": "integer",
            "format": "int32"
          },
          "numFilter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textFilter": {
            "type": "string",
            "nullable": true
          },
          "stateFilter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequestDto": {
        "required": [
          "firstName",
          "identityCard",
          "lastName",
          "password",
          "rolName",
          "username"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "identityCard": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(?!.*(\\d)\\1{3})[0-9]{10}$",
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "username": {
            "maxLength": 20,
            "minLength": 8,
            "pattern": "^(?!.*[\\W_])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,20}$",
            "type": "string"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "rolName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "maxLength": 16,
            "minLength": 8,
            "pattern": "^(?!.*\\s)(?=.*[A-Z])(?=.*[\\W_]).{8,16}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "TokenRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequestDto": {
        "required": [
          "firstName",
          "identityCard",
          "lastName",
          "rolName",
          "username"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 80,
            "minLength": 2,
            "type": "string"
          },
          "identityCard": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^(?!.*(\\d)\\1{3})[0-9]{10}$",
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "username": {
            "maxLength": 20,
            "minLength": 8,
            "pattern": "^(?!.*[\\W_])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,20}$",
            "type": "string"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "rolName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "maxLength": 16,
            "minLength": 8,
            "pattern": "^(?!.*\\s)(?=.*[A-Z])(?=.*[\\W_]).{8,16}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}